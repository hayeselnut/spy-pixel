{"version":3,"sources":["components/back-to-home-button.js","components/log-cookies.js","components/log-headers.js","pages/campaign.js","components/campaign-card.js","pages/dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["BackToHomeButton","to","Icon","size","color","name","LogCookies","cookies","Table","compact","celled","striped","singleLine","Header","Row","HeaderCell","colSpan","Body","Object","keys","length","Cell","entries","map","key","value","LogHeaders","headers","ua","parser","includes","browser","version","device","model","os","cpu","architecture","CampaignPage","campaigns","campaignId","useParams","filter","campaign","id","Container","style","paddingTop","as","panels","logs","log","i","title","email","timestamp","toDate","toDateString","toLocaleTimeString","content","uniqueEmails","idx","arr","indexOf","fontWeight","Statistic","Group","Value","Label","Accordion","styled","fluid","exclusive","height","CampaignCard","Card","Content","header","description","Dashboard","useState","newCampaignId","setNewCampaignId","newEmail","setNewEmail","buttonIcon","setButtonicon","regex","RegExp","isAlphanumeric","string","test","display","flexWrap","rowGap","columnGap","Input","error","list","icon","iconPosition","placeholder","onChange","e","d","Button","disabled","labelPosition","onClick","copy","asHtml","Divider","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","App","setCampaigns","useEffect","getData","a","col","collection","getDocs","snapshot","campaignList","docs","doc","data","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2edec28a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nconst BackToHomeButton = () => {\r\n  return (\r\n    <Link to=\"/spy-pixel\">\r\n      <Icon size=\"big\" color=\"black\" name=\"left arrow\" />\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default BackToHomeButton;\r\n","import React from 'react';\nimport { Table } from \"semantic-ui-react\";\n\nconst LogCookies = ({ cookies }) => {\n  return (\n    <Table compact celled striped singleLine>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell colSpan='2'>Cookies</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n        {cookies && Object.keys(cookies).length === 0\n        ? (\n          <Table.Row>\n            <Table.Cell colSpan='2'>No cookies detected</Table.Cell>\n          </Table.Row>\n        ) : (\n          Object.entries(cookies).map(([key, value]) => (\n            <Table.Row key={key}>\n              <Table.Cell>{key}</Table.Cell>\n              <Table.Cell>{value}</Table.Cell>\n            </Table.Row>))\n        )\n      }\n      </Table.Body>\n    </Table>\n  )\n}\n\nexport default LogCookies;\n","import React from 'react';\r\nimport parser from \"ua-parser-js\";\r\nimport { Icon, Table } from \"semantic-ui-react\";\r\n\r\nconst LogHeaders = ({ headers }) => {\r\n  const ua = parser(headers[\"User-Agent\"]);\r\n\r\n  return (\r\n    <>\r\n      <Table compact celled striped singleLine>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell colSpan='2'>{`User Agent${headers[\"User-Agent\"].includes(\"GoogleImageProxy\") ? \" (via GoogleImageProxy)\" : \"\"}`}</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          <Table.Row>\r\n            <Table.Cell><Icon name='chrome' /> Browser</Table.Cell>\r\n            <Table.Cell>{ua.browser.name ? `${ua.browser.name} ${ua.browser.version}` : <i>unknown</i>}</Table.Cell>\r\n          </Table.Row>\r\n\r\n          <Table.Row>\r\n            <Table.Cell><Icon name='mobile alternate' /> Device</Table.Cell>\r\n            <Table.Cell>{ua.device.model || <i>unknown</i>}</Table.Cell>\r\n          </Table.Row>\r\n\r\n          <Table.Row>\r\n            <Table.Cell><Icon name='computer' /> OS</Table.Cell>\r\n            <Table.Cell>{ua.os.name ? `${ua.os.name} ${ua.os.version}` : <i>unknown</i>}</Table.Cell>\r\n          </Table.Row>\r\n\r\n          <Table.Row>\r\n            <Table.Cell><Icon name='microchip' /> Architecture</Table.Cell>\r\n            <Table.Cell>{ua.cpu.architecture || <i>unknown</i>}</Table.Cell>\r\n          </Table.Row>\r\n        </Table.Body>\r\n      </Table>\r\n\r\n      <Table compact celled striped singleLine>\r\n      <Table.Header>\r\n        <Table.Row>\r\n          <Table.HeaderCell colSpan='2'>{`Location${headers[\"User-Agent\"].includes(\"GoogleImageProxy\") ? \" (via GoogleImageProxy)\" : \"\"}`}</Table.HeaderCell>\r\n        </Table.Row>\r\n      </Table.Header>\r\n\r\n      <Table.Body>\r\n        <Table.Row>\r\n          <Table.Cell><Icon name='world' /> Country</Table.Cell>\r\n          <Table.Cell>{headers[\"X-Appengine-Country\"] || <i>unknown</i>}</Table.Cell>\r\n        </Table.Row>\r\n\r\n        <Table.Row>\r\n          <Table.Cell><Icon name='building' /> City</Table.Cell>\r\n          <Table.Cell>{headers[\"X-Appengine-City\"] || <i>unknown</i>}</Table.Cell>\r\n        </Table.Row>\r\n\r\n        <Table.Row>\r\n          <Table.Cell><Icon name='location arrow' /> IP</Table.Cell>\r\n          <Table.Cell>{headers[\"X-Appengine-User-Ip\"] || <i>unknown</i>}</Table.Cell>\r\n        </Table.Row>\r\n      </Table.Body>\r\n      </Table>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LogHeaders;\r\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Accordion, Container, Header, Statistic, Table } from 'semantic-ui-react';\nimport BackToHomeButton from '../components/back-to-home-button';\nimport LogCookies from '../components/log-cookies';\nimport LogHeaders from '../components/log-headers';\n\nconst CampaignPage = ({ campaigns }) => {\n  const { campaignId } = useParams();\n  const [campaign] = campaigns.filter(campaign => campaign.id === campaignId);\n\n  if (!campaign) {\n    return (\n      <Container style={{paddingTop: '4rem'}}>\n        <BackToHomeButton />\n        <Header as='h1'>Campaigns {campaignId} not found</Header>\n      </Container>\n    )\n  }\n\n  const panels = campaign.logs.map((log, i) => ({\n    key: `panel-${i}`,\n    title: `${log.email || \"\"}${log.email ? \" r\" : \"R\"}ead at ${log.timestamp.toDate().toDateString()} ${log.timestamp.toDate().toLocaleTimeString()}`,\n    content: { content: <>\n      <Header as=\"h3\" content=\"Headers\"/>\n      <LogHeaders headers={log.headers} />\n\n      <Header as=\"h3\" content=\"Cookies\"/>\n      <LogCookies cookies={log.cookies}/>\n    </> }\n  }))\n\n  const uniqueEmails = campaign.logs\n    .map(log => log.email)\n    .filter((email, idx, arr) => arr.indexOf(email) === idx)\n    .filter(email => email !== \"\");\n\n  return (\n    <Container style={{paddingTop: '4rem'}}>\n      <BackToHomeButton />\n      <Header as='h1'><span style={{fontWeight: \"normal\"}}>Details for campaign </span>{campaignId}</Header>\n\n      <Statistic.Group>\n        <Statistic>\n          <Statistic.Value>{campaign.logs.length}</Statistic.Value>\n          <Statistic.Label>Total Views</Statistic.Label>\n        </Statistic>\n        <Statistic>\n          <Statistic.Value>{uniqueEmails.length}</Statistic.Value>\n          <Statistic.Label>Unique Views</Statistic.Label>\n        </Statistic>\n      </Statistic.Group>\n\n      {uniqueEmails.length > 0 &&\n        <>\n          <Header as='h2'>Views per recipient</Header>\n            <Table compact celled striped singleLine>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Recipient</Table.HeaderCell>\n                <Table.HeaderCell>Number of views</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              {uniqueEmails.map((email) => (\n                <Table.Row key={email}>\n                  <Table.Cell>{email}</Table.Cell>\n                  <Table.Cell>{campaign.logs.filter(log => log.email === email).length}</Table.Cell>\n                </Table.Row>))\n              }\n            </Table.Body>\n          </Table>\n        </>\n      }\n\n      <Header as='h2'>Logs</Header>\n      <Accordion styled fluid exclusive={false} panels={panels} />\n      <div style={{height: \"10rem\"}} />\n    </Container>\n  )\n}\n\nexport default CampaignPage;\n","import React from 'react';\nimport { Card } from 'semantic-ui-react';\n\nconst CampaignCard = ({ campaign }) => {\n  return (\n    <Card>\n      <Card.Content header={campaign.id} />\n      <Card.Content description={`${campaign.logs?.length || 0} views`} />\n    </Card>\n  )\n}\n\nexport default CampaignCard;\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Divider, Header, Input, Button, Icon } from \"semantic-ui-react\";\r\nimport copy from \"copy-html-to-clipboard\";\r\nimport CampaignCard from \"../components/campaign-card\";\r\n\r\nconst Dashboard = ({ campaigns }) => {\r\n  const [newCampaignId, setNewCampaignId] = useState(\"\");\r\n  const [newEmail, setNewEmail] = useState(\"\");\r\n  const [buttonIcon, setButtonicon] = useState(\"copy\");\r\n\r\n  const handleClick = () => {\r\n    copy(`<img width=\"1\" height=\"1\" border=\"0\" src=\"https://spy-pixel.ts.r.appspot.com/spy-pixel.gif?campaign=${newCampaignId}&email=${newEmail}\" />`, {\r\n      asHtml: true\r\n    });\r\n    setButtonicon(\"check\");\r\n  }\r\n\r\n  const regex = new RegExp(\"^[a-zA-Z0-9-_@+.]+$\");\r\n  const isAlphanumeric = (string) => {\r\n    return string === \"\" || regex.test(string);\r\n  }\r\n\r\n  return (\r\n    <Container style={{paddingTop: \"4rem\"}}>\r\n      <Header as=\"h1\">Dashboard</Header>\r\n\r\n      <Header as=\"h2\">Create a spy pixel!</Header>\r\n\r\n      <p>This button creates a spy pixel for you and copies it to your clipboard. Paste it into your emails and start sending!</p>\r\n      <p>Campaign IDs are compulsory as they are used to identify which email campaign the pixel is a part of. Emails are optional, and can be used to identify recipients. All input must be alphanumeric characters, ., -, _, @, + or .</p>\r\n      <p>NOTE: you can only paste into a rich text editor since HTML is copied directly to your clipboard.</p>\r\n\r\n      <div style={{display: \"flex\", flexWrap: \"wrap\", rowGap: \"1rem\", columnGap: \"1rem\"}}>\r\n        <div>\r\n          <Input error={!isAlphanumeric(newCampaignId)} list=\"campaigns\" icon=\"flag\" iconPosition=\"left\" placeholder=\"Campaign ID\" onChange={(e, d) => { setNewCampaignId(d.value); setButtonicon(\"copy\"); }} />\r\n        </div>\r\n        <datalist id=\"campaigns\">\r\n          {campaigns.map(campaign => <option key={campaign.id} value={campaign.id}>{campaign.id}</option>)}\r\n        </datalist>\r\n\r\n        <div>\r\n          <Input error={!isAlphanumeric(newEmail)} icon=\"mail\" iconPosition=\"left\" placeholder=\"Email\" onChange={(e, d) => { setNewEmail(d.value); setButtonicon(\"copy\"); }} />\r\n        </div>\r\n\r\n        <div>\r\n          <Button disabled={newCampaignId === \"\" || !isAlphanumeric(newCampaignId) || !isAlphanumeric(newEmail)} icon labelPosition=\"left\" color={buttonIcon === \"copy\" ? \"blue\" : \"green\"} onClick={handleClick}>\r\n            Copy to clipboard\r\n            <Icon name={buttonIcon} />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <Divider />\r\n\r\n      <Header as=\"h2\">Active campaigns</Header>\r\n      <div style={{display: \"flex\", flexWrap: \"wrap\", rowGap: \"2rem\", columnGap: \"2rem\"}}>\r\n        {campaigns.map(campaign => (\r\n          <Link to={`/spy-pixel/campaign/${campaign.id}`} key={campaign.id}>\r\n            <CampaignCard campaign={campaign} />\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore, collection, getDocs } from 'firebase/firestore/lite';\r\n\r\nimport CampaignPage from './pages/campaign';\r\nimport Dashboard from './pages/dashboard';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD9PDc_JLEKOSiSTrPG-XAFs0ICpfMCyQM\",\r\n  authDomain: \"spy-pixel-2e767.firebaseapp.com\",\r\n  projectId: \"spy-pixel-2e767\",\r\n  storageBucket: \"spy-pixel-2e767.appspot.com\",\r\n  messagingSenderId: \"656119548415\",\r\n  appId: \"1:656119548415:web:ed558859a4ff701c68ffca\",\r\n  measurementId: \"G-J7YG62XPL2\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\n\r\nconst App = () => {\r\n  const [campaigns, setCampaigns] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const col = collection(db, \"campaigns\");\r\n      const snapshot = await getDocs(col);\r\n      const campaignList = snapshot.docs.map(doc => ({id: doc.id, ...doc.data()}));\r\n      setCampaigns(campaignList);\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route exact path=\"/spy-pixel/\" element={<Dashboard campaigns={campaigns}/>} />\r\n        <Route exact path=\"/spy-pixel/campaign/:campaignId\" element={<CampaignPage campaigns={campaigns}/>} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  )\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}